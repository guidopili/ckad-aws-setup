- name: Setup nodes
  hosts: all
  become: yes
  tasks:
    - name: Ensure all to latest 
      apt:
        name: "*"
        state: latest
    - name: Adds GCE key
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg" 
        state: present
    - name: Adds repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes
    - name: Install packages
      apt:
        pkg:
          - kubeadm=1.20.1-00
          - kubelet=1.20.1-00
          - kubectl=1.20.1-00
    - name: Hold kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold kubelet
      dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold kubectl
      dpkg_selections:
        name: kubectl
        selection: hold
    - name: Create containerd.conf
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter
    - name: Add the overlay module
      modprobe:
        name: overlay
    - name: Add the br_netfilter module
      modprobe:
        name: br_netfilter
    - name: Create k8s-cri.conf
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1
    - name: Reload systemd
      command: sysctl --system
    - name: Install containerd
      apt:
        name: containerd
        state: present
    - name: Configure containerd
      command: containerd config default | sudo tee /etc/containerd/config.toml
    - name: Reload containerd
      systemd:
        name: containerd
        state: restarted
- name: Setup master node
  hosts: master
  become: yes
  tasks:
    - name: Check kube config
      stat:
        path: /home/{{ ansible_ssh_user }}/.kube/config
      register: config_file
    - name: Init kubeadm
      command: kubeadm init --kubernetes-version 1.20.1 --pod-network-cidr 192.168.0.0/16
      when: not config_file.stat.exists
    - name: Make .kube dir
      become: no
      when: not config_file.stat.exists
      file:
        path: "/home/{{ ansible_ssh_user }}/.kube"
        state: directory
        owner: "{{ ansible_ssh_user }}"
    - name: Copy config
      when: not config_file.stat.exists
      copy:
        remote_src: yes
        src:  /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_ssh_user }}/.kube/config"
        owner: "{{ ansible_ssh_user }}"
    - name: Apply network config
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      become: no
    - name: Get join command
      shell: kubeadm token create --print-join-command
      register: join_command
    - name: "Add K8S join command to dummy host"
      add_host:
        name: K8S_JOIN_COMMAND
        join_command: "{{ join_command.stdout }}"
- name: Setup minions
  hosts: minion
  become: yes
  tasks:
    - name: Check file
      stat:
        path: /etc/kubernetes/pki/ca.crt
      register: exists_ca
    - name: Init minion
      command: "{{ hostvars['K8S_JOIN_COMMAND']['join_command'] }}"
      when: not exists_ca.stat.exists
